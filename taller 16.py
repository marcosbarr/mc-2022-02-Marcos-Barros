# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ljTkKM7b-lD6hJxf52exIwCeMoHb7C2F
"""

import numpy as np
import sympy as sym
import matplotlib.pyplot as plt


xi = [1,   2,   3,  4,  5,   6, 7, 8]
yi = [7, 5, 6, 3, 4, 2.6, 2, 0.6]


xi = np.array(xi,dtype=float)
yi = np.array(yi,dtype=float)
n  = len(xi)

xm  = np.mean(xi)
ym  = np.mean(yi)
sx  = np.sum(xi)
sy  = np.sum(yi)
sxy = np.sum(xi*yi)
sx2 = np.sum(xi**2)
sy2 = np.sum(yi**2)


a1 = (n*sxy-sx*sy)/(n*sx2-sx**2)
a0 = ym - a1*xm


x = sym.Symbol('x')
f = a0 + a1*x

fx = sym.lambdify(x,f)
fi = fx(xi)


numerador = n*sxy - sx*sy
raiz1 = np.sqrt(n*sx2-sx**2)
raiz2 = np.sqrt(n*sy2-sy**2)
r = numerador/(raiz1*raiz2)

r2 = r**2
r2_porcentaje = np.around(r2*100,2)


print(' f = ',f)
print('coef_correlación   r  = ', r)
print('coef_determinación r2 = ', r2)
print(str(r2_porcentaje)+'% de los datos')
print('     está descrito en el modelo lineal')


plt.plot(xi,yi,'o',label='(xi,yi)')
plt.plot(xi,fi, color='orange',  label=f)


for i in range(0,n,1):
    y0 = np.min([yi[i],fi[i]])
    y1 = np.max([yi[i],fi[i]])
    plt.vlines(xi[i],y0,y1, color='red',
               linestyle ='dotted')
plt.legend()
plt.xlabel('xi')
plt.title('minimos cuadrados')
plt.show()